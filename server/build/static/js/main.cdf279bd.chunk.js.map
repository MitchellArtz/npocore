{"version":3,"sources":["components/Navbar.js","components/Organizations.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useState","organization","setOrganization","useCookies","cookies","useEffect","a","className","href","src","alt","data-toggle","data-target","id","to","undefined","_id","Organizations","baseOrganizations","setBaseOrganizations","organizations","setOrganizations","showFilters","setShowFilters","getOrganizations","fetch","method","mode","cache","credentials","headers","then","response","json","catch","err","console","log","document","title","readMore","event","readMoreButton","target","parentNode","style","display","querySelector","toggleFilters","Helmet","name","content","onClick","type","placeholder","onChange","currentSearchText","value","toLowerCase","filteredOrganizations","filter","includes","genderValue","gender","required","causeValue","cause","interestValue","interests","map","key","email","transform","location","description","interest","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cdf279bd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\n// COMPONENTS\nimport AddNPO from './AddNPO.js';\n\nfunction Navbar() {\n  const [organization, setOrganization] = useState({});\n  const [cookies, setCookie] = useCookies(['name']);\n\n  useEffect(async () => {\n    await setOrganization(cookies.organization);\n  }, []);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-light\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <img className=\"npocore-logo\" src=\"img/npocore.png\" alt=\"\" />\n        </a>\n        <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-target\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbar-target\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/contact\">Contact</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/featured\">Featured</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/map\">Map</a>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/organizations\">Organizations</Link>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/posts\">Posts</a>\n            </li>\n\n            {organization == undefined ?\n              <li className=\"nav-item\">\n                <a className=\"btn btn-info npo-button\" href=\"/login\">Login/Register</a>\n              </li>\n              :\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href={\"/organizations/\" + organization._id}>My Organization</a>\n              </li>\n            }\n            {organization != undefined ?\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/logout\">Logout</a>\n            </li>\n            : <span></span>\n            }\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\nfunction Organizations() {\n  const [baseOrganizations, setBaseOrganizations] = useState([]);\n  const [organizations, setOrganizations] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n\n  const getOrganizations = async () => {\n    // SAVE MONGODB ORGS TO PROPS\n    fetch(\"/api/get-organizations\",{\n        method: 'GET',\n        mode: \"no-cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\"Content-Type\": \"application/json\"}\n      })\n      .then((response) => {\n        return response.json();\n      })\n      .then((organizations) => {\n        setOrganizations(organizations);\n        setBaseOrganizations(organizations);\n      })\n      .catch((err) => {\n          console.log(\"Exception:\", err);\n      });\n  }\n\n  useEffect(() => {\n    document.title = \"NPO Core - Organizations\"; // Setting title\n    getOrganizations(); // GET ALL ORGS ON LOAD\n  }, []);\n\n  // FILTERING FUNCTIONS\n  const filterOrganizationsBySearch = (event) => {\n    const currentSearchText = event.target.value.toLowerCase();\n\n    if (currentSearchText === \"\") {\n      getOrganizations();\n    } else {\n      // FILTERING ORGANIZATIONS BY LOWERCASE SEARCH FILTER\n      const filteredOrganizations = baseOrganizations.filter(organization => organization.name.toLowerCase().includes(currentSearchText));\n      setOrganizations(filteredOrganizations);\n    }\n  }\n\n  const filterOrganizationsByGender = (event) => {\n    const genderValue = event.target.value;\n\n    if (genderValue) {\n      setOrganizations(baseOrganizations.filter(organization => organization.gender === genderValue));\n    } else {\n      getOrganizations();\n    }\n  }\n\n  const filterOrganizationsByCause = (event) => {\n    const causeValue = event.target.value;\n\n    if (causeValue) {\n      setOrganizations(baseOrganizations.filter(organization => organization.cause === causeValue));\n    } else {\n      getOrganizations();\n    }\n  }\n\n  const filterOrganizationsByInterest = (event) => {\n    const interestValue = event.target.value;\n\n    if (interestValue) {\n      setOrganizations(baseOrganizations.filter(organization => {\n        return organization.interests.includes(interestValue)\n      }));\n    } else {\n      getOrganizations();\n    }\n  }\n\n  const readMore = (event) => {\n    const readMoreButton = event.target;\n    readMoreButton.parentNode.style.display = \"none\";\n    readMoreButton.parentNode.parentNode.parentNode.querySelector(\"p\").className = \"\";\n  }\n\n\n  const toggleFilters = (event) => {\n    if (showFilters) {\n      setShowFilters(false);\n    } else {\n      setShowFilters(true);\n    }\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>NPO Core - A List of Nonprofit Organizations for High School & College Students</title>\n        <meta name=\"description\" content=\"Look at our huge, curated list of nonprofit organizations that we've built up! Find a nonprofit organization to join, partner with, or simply get in contact with here on NPO Core!\" />\n      </Helmet>\n      <div className=\"pb-5\">\n        <h1 className=\"mt-4\">Organizations</h1>\n        <small>\n          If you would like your nonprofit organization removed from NPO Core, please <a href=\"/contact\">contact us</a>.\n        </small>\n\n        <br/>\n\n        {showFilters ?\n          <button onClick={toggleFilters}>Filters &uarr;</button>\n          :\n          <button onClick={toggleFilters}>Filters &darr;</button>\n        }\n\n        {showFilters ?\n          <div className=\"filters mt-3\">\n            <input className=\"form-control search-bar\" type=\"text\" placeholder=\"Filter\" onChange={filterOrganizationsBySearch} />\n\n            <select onChange={filterOrganizationsByGender} required>\n              <option value=\"\">Gender</option>\n              <option value=\"Everyone\">Everyone</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Non-binary\">Non-binary</option>\n            </select>\n\n            <select onChange={filterOrganizationsByCause} required>\n              <option value=\"\">Cause</option>\n              <option value=\"Animal Welfare\">Animal Welfare</option>\n              <option value=\"Arts and Culture\">Arts and Culture</option>\n              <option value=\"Children\">Children</option>\n              <option value=\"Civil Rights and Social Action\">Civil Rights and Social Action</option>\n              <option value=\"Disaster Relief\">Disaster Relief</option>\n              <option value=\"Economic Empowerment\">Economic Empowerment</option>\n              <option value=\"Education\">Education</option>\n              <option value=\"Environment\">Environment</option>\n              <option value=\"Health\">Health</option>\n              <option value=\"Human Rights\">Human Rights</option>\n              <option value=\"Politics\">Politics</option>\n              <option value=\"Poverty Alleviation\">Poverty Alleviation</option>\n              <option value=\"Science and Technology\">Science and Technology</option>\n              <option value=\"Social Services\">Social Services</option>\n            </select>\n\n            <select onChange={filterOrganizationsByInterest} required>\n              <option value=\"\">Interest</option>\n              <option value=\"Members\">Members</option>\n              <option value=\"Partnerships\">Partnerships</option>\n              <option value=\"Sponsors\">Sponsors</option>\n              <option value=\"Clients\">Clients</option>\n              <option value=\"Opportunities\">Opportunities</option>\n            </select>\n          </div>\n          :\n          <span></span>\n        }\n\n        <div className=\"organizations mt-5\">\n          {organizations ? organizations.map((organization, key) =>\n            <div className=\"organization\" key={key}>\n              <div className=\"organization-header\">\n                <h4>{organization.name}</h4>\n                <div className=\"organization-resources\">\n                  <a href=\"mailto:{organization.email}\" target=\"_\">\n                    {organization.email ? <img src=\"/img/email.svg\" alt=\"{organization.name} Email Address\" /> : null}\n                  </a>\n                  <a href={\"/organizations/\" + organization._id}>\n                    <img style={{transform: \"translateY(-2px)\"}} src=\"/img/link.svg\" alt=\"{organization.name}\" />\n                  </a>\n                </div>\n              </div>\n              {organization.location.name ? <div><strong>Location:</strong> {organization.location.name}</div> : <span></span>}\n              <div><strong>Gender:</strong> {organization.gender}</div>\n              <div><strong>Cause:</strong> {organization.cause}</div>\n              <p className=\"organization-description\"><strong>Description:</strong> {organization.description}</p>\n              <div className=\"text-right mb-2\">\n                <button className=\"btn btn-link p-0\" onClick={readMore}>\n                  <small>Read More</small>\n                </button>\n              </div>\n              <div className=\"organization-interests\">\n                {(organization.interests || []).map((interest, key) =>\n                  <small>{interest}</small>\n                )}\n              </div>\n            </div>\n          ) :\n          <div className=\"text-center\">\n            <small>No organizations yet!</small>\n          </div>\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Organizations;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// COMPONENTS\nimport Navbar from './components/Navbar.js';\nimport Organizations from './components/Organizations.js';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Navbar/>\n\n          <Switch>\n            <div className=\"container\">\n              <div className=\"hover-container\">\n                <Route path=\"/organizations\" component={Organizations}/>\n              </div>\n            </div>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}