{"version":3,"sources":["firebase.js","components/AddNPO.js","components/Navbar.js","components/Organizations.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AddNPO","useState","isOpen","setIsOpen","organizationsRef","database","ref","setOrganizations","hideModal","useEffect","tempOrganizations","once","then","snapshot","val","Object","entries","organizationObj","push","getOrganizations","class","onClick","Modal","show","onHide","Header","Body","to","Footer","Navbar","className","src","alt","data-toggle","data-target","id","href","React","Component","Organizations","baseOrganizations","setBaseOrganizations","organizations","values","organizationJSON","document","title","readMore","event","readMoreButton","target","parentNode","style","display","querySelector","Helmet","name","content","type","placeholder","onChange","currentSearchText","value","toLowerCase","filteredOrganizations","filter","organization","includes","genderValue","gender","required","causeValue","cause","interestValue","interests","map","key","email","website","description","interest","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.521bf95a.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC_O7Nbu-Z-__gazBJUQRo0NfAtnx5eCgo\",\n  authDomain: \"npocore-8fbf6.firebaseapp.com\",\n  databaseURL: \"https://npocore-8fbf6.firebaseio.com\",\n  projectId: \"npocore-8fbf6\",\n  storageBucket: \"npocore-8fbf6.appspot.com\",\n  messagingSenderId: \"33661078257\",\n  appId: \"1:33661078257:web:286dde125e81a71ac37750\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\n// COMPONENTS\nimport Modal from \"react-bootstrap/Modal\";\n\n// IMPORTS\nimport alertify from \"alertifyjs\";\nimport firebase from '../firebase.js';\n\n\nfunction AddNPO() {\n  const [isOpen, setIsOpen] = useState(false); // MODAL VARIABLES\n  const organizationsRef = firebase.database().ref(\"organizations\") // FIREBASE\n  const [organizations, setOrganizations] = useState([]); // NPO ORGANIZATIONS\n\n  // FORM VARIABLES\n  const [orgName, setOrgName] = useState(\"\");\n  const [orgEmail, setOrgEmail] = useState(\"\");\n  const [orgDescription, setOrgDescription] = useState(\"\");\n  const [orgWebsite, setOrgWebsite] = useState(\"\");\n  const [orgGender, setOrgGender] = useState(\"\");\n  const [orgCause, setOrgCause] = useState(\"\");\n\n  // MODAL FUNCTIONS\n  const showModal = () => { setIsOpen(true); };\n  const hideModal = () => { setIsOpen(false); };\n\n  // FORM FUNCTIONS\n  const onOrgNameChange = (event) => { setOrgName(event.target.value); }\n  const onOrgEmailChange = (event) => { setOrgEmail(event.target.value); }\n  const onOrgDescriptionChange = (event) => { setOrgDescription(event.target.value); }\n  const onOrgWebsiteChange = (event) => { setOrgWebsite(event.target.value); }\n  const onOrgGenderChange = (event) => { setOrgGender(event.target.value); }\n  const onOrgCauseChange = (event) => { setOrgCause(event.target.value); }\n\n  // VALIDATION FUNCTIONS\n  const validateOrganizationUniqueness = (newOrganization) => {\n    for (let organization of organizations) {\n      if (organization.name === newOrganization.name) {\n        return \"name\";\n      } else if (organization.email === newOrganization.email && newOrganization.email != \"\") {\n        return \"email\";\n      }\n    }\n\n    return true;\n  }\n\n  const addNPO = (event) => {\n    event.preventDefault(); // STOP FORM SUBMISSION\n\n    // GET ALL INTERESTS\n    let interests = [];\n    for (let checkbox of document.querySelectorAll(\".interest-checkbox:checked\")) {\n      interests.push(checkbox.value);\n    }\n\n    // CREATE NEW ORGANIZATION\n    const newOrganization = {\n      name: orgName,\n      email: orgEmail,\n      description: orgDescription,\n      website: orgWebsite,\n      gender: orgGender,\n      cause: orgCause,\n      interests: interests\n    }\n\n    const unique = validateOrganizationUniqueness(newOrganization);\n\n    if (unique === true) {\n      // SAVE TO FIREBASE\n      organizationsRef.push(newOrganization)\n\n      // CLOSE MODAL\n      setIsOpen(false);\n\n      // MAKE ALERT\n      alertify.success(\"Your organization has been added! Hit the refresh button to see your organization!\")\n    } else {\n      if (unique === \"name\") {\n        alertify.error(\"That organization name has been used already.\");\n      } else if (unique === \"email\") {\n        alertify.error(\"That organization email has been used already.\");\n      }\n    }\n  }\n\n  const getOrganizations = () => {\n    let tempOrganizations = [];\n    organizationsRef.once(\"value\").then((snapshot) => {\n      if (snapshot.val()) {\n        for (let organizationObj of Object.entries(snapshot.val())) {\n          tempOrganizations.push(organizationObj[1]);\n        }\n      }\n\n      setOrganizations(tempOrganizations);\n    });\n  }\n\n  useEffect(() => {\n    getOrganizations();\n  })\n\n  return (\n    <div>\n      <button class=\"btn btn-info npo-button\" onClick={showModal}>Add your NPO!</button>\n\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <h3>Our Database is Down!</h3>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            We're sorry! We've recently received a DoS (Denial of Service) attack on our database, so our database is temporarily shut down. If you'd like to add your nonprofit organization, please <Link onClick={hideModal} to=\"/contact\">contact us</Link>.\n            <br/><br/>\n            Sorry for the inconvenience.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Link class=\"btn btn-info\" onClick={hideModal} to=\"/contact\">Contact us!</Link>.\n        </Modal.Footer>\n      </Modal>\n\n      {/* <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <h3>Add your nonprofit organization</h3>\n        </Modal.Header>\n        <form onSubmit={addNPO}>\n          <Modal.Body>\n            <label>Organization Name:</label>\n            <input className=\"form-control mb-2\" type=\"text\" onChange={onOrgNameChange} required />\n\n            <label>Organization Email:</label>\n            <input className=\"form-control mb-2\" type=\"email\" onChange={onOrgEmailChange} />\n\n            <label>Organization Description:</label>\n            <textarea className=\"form-control mb-2\" rows=\"5\" onChange={onOrgDescriptionChange} required />\n\n            <label>Organization Website:</label>\n            <input className=\"form-control mb-2\" type=\"url\" onChange={onOrgWebsiteChange} required />\n\n            <label className=\"mt-3\">Gender: (that your organization targets)</label>\n            <br/>\n            <select onChange={onOrgGenderChange} required>\n              <option value=\"\">----------</option>\n              <option value=\"Everyone\">Everyone</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Non-binary\">Non-binary</option>\n            </select>\n\n            <br/>\n\n            <label className=\"mt-3\">Cause:</label>\n            <br/>\n            <select onChange={onOrgCauseChange} required>\n              <option value=\"\">----------</option>\n              <option value=\"Animal Welfare\">Animal Welfare</option>\n              <option value=\"Arts and Culture\">Arts and Culture</option>\n              <option value=\"Children\">Children</option>\n              <option value=\"Civil Rights and Social Action\">Civil Rights and Social Action</option>\n              <option value=\"Disaster Relief\">Disaster Relief</option>\n              <option value=\"Economic Empowerment\">Economic Empowerment</option>\n              <option value=\"Education\">Education</option>\n              <option value=\"Environment\">Environment</option>\n              <option value=\"Health\">Health</option>\n              <option value=\"Human Rights\">Human Rights</option>\n              <option value=\"Politics\">Politics</option>\n              <option value=\"Poverty Alleviation\">Poverty Alleviation</option>\n              <option value=\"Science and Technology\">Science and Technology</option>\n              <option value=\"Social Services\">Social Services</option>\n            </select>\n\n            <br/>\n\n            <label className=\"mt-4\">Looking for:</label>\n            <div className=\"looking-for-checkboxes\">\n              <div><input className=\"interest-checkbox\" type=\"checkbox\" value=\"Members\"/> <label>Members</label></div>\n              <div><input className=\"interest-checkbox\" type=\"checkbox\" value=\"Partnerships\"/> <label>Partnerships</label></div>\n              <div><input className=\"interest-checkbox\" type=\"checkbox\" value=\"Sponsors\"/> <label>Sponsors</label></div>\n              <div><input className=\"interest-checkbox\" type=\"checkbox\" value=\"Clients\"/> <label>Clients</label></div>\n              <div><input className=\"interest-checkbox\" type=\"checkbox\" value=\"Opportunities\"/> <label>Opportunities</label></div>\n            </div>\n\n            <label className=\"mt-4\">Legal:</label>\n            <div><input type=\"checkbox\" required/> <label><small>I have read the Launch Tech LLC <a href=\"https://www.launchtechllc.com/corporate/terms-of-service\" target=\"_\">Terms of Service</a>.</small></label></div>\n          </Modal.Body>\n          <Modal.Footer>\n            <input class=\"btn btn-info\" type=\"submit\" value=\"Submit your NPO!\"/>\n          </Modal.Footer>\n        </form>\n      </Modal> */}\n    </div>\n  )\n}\n\nexport default AddNPO;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n// COMPONENTS\nimport AddNPO from './AddNPO.js';\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"npocore-logo\" src=\"img/npocore.png\" alt=\"\" />\n          </Link>\n          <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-target\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbar-target\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/contact\">Contact</a>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/organizations\">Organizations</Link>\n              </li>\n              <li className=\"nav-item\">\n                <AddNPO/>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\n// IMPORTS\nimport organizationJSON from '../organizations.json';\n\n\nfunction Organizations() {\n  const [baseOrganizations, setBaseOrganizations] = useState([]);\n  const [organizations, setOrganizations] = useState([]);\n\n  const getOrganizations = () => {\n    setOrganizations(Object.values(organizationJSON[\"organizations\"]));\n    setBaseOrganizations(Object.values(organizationJSON[\"organizations\"]));\n  }\n\n  useEffect(() => {\n    document.title = \"NPO Core - Organizations\"; // Setting title\n    getOrganizations(); // GET ALL ORGS ON LOAD\n  }, []);\n\n  // FILTERING FUNCTIONS\n  const filterOrganizationsBySearch = (event) => {\n    const currentSearchText = event.target.value.toLowerCase();\n\n    if (currentSearchText === \"\") {\n      getOrganizations();\n    } else {\n      // FILTERING ORGANIZATIONS BY LOWERCASE SEARCH FILTER\n      const filteredOrganizations = baseOrganizations.filter(organization => organization.name.toLowerCase().includes(currentSearchText));\n      setOrganizations(filteredOrganizations);\n    }\n  }\n\n  const filterOrganizationsByGender = (event) => {\n    const genderValue = event.target.value;\n\n    if (genderValue) {\n      setOrganizations(baseOrganizations.filter(organization => organization.gender === genderValue));\n    } else {\n      getOrganizations();\n    }\n  }\n\n  const filterOrganizationsByCause = (event) => {\n    const causeValue = event.target.value;\n\n    if (causeValue) {\n      setOrganizations(baseOrganizations.filter(organization => organization.cause === causeValue));\n    } else {\n      getOrganizations();\n    }\n  }\n\n  const filterOrganizationsByInterest = (event) => {\n    const interestValue = event.target.value;\n\n    if (interestValue) {\n      setOrganizations(baseOrganizations.filter(organization => {\n        return organization.interests.includes(interestValue)\n      }));\n    } else {\n      getOrganizations();\n    }\n  }\n\n  const readMore = (event) => {\n    const readMoreButton = event.target;\n    readMoreButton.parentNode.style.display = \"none\";\n    readMoreButton.parentNode.parentNode.parentNode.querySelector(\"p\").className = \"\";\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>NPO Core - A List of Nonprofit Organizations for High School & College Students</title>\n        <meta name=\"description\" content=\"Look at our huge, curated list of nonprofit organizations that we've built up! Find a nonprofit organization to join, partner with, or simply get in contact with here on NPO Core!\" />\n      </Helmet>\n      <div className=\"pb-5\">\n        <h1 className=\"mt-4\">Organizations</h1>\n        <small>\n          If you would like your nonprofit organization removed from NPO Core, please <Link to=\"/contact\">contact us</Link>.\n        </small>\n\n        <div className=\"filters mt-3\">\n          <input className=\"form-control search-bar\" type=\"text\" placeholder=\"Filter\" onChange={filterOrganizationsBySearch} />\n\n          <select onChange={filterOrganizationsByGender} required>\n            <option value=\"\">Gender</option>\n            <option value=\"Everyone\">Everyone</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Non-binary\">Non-binary</option>\n          </select>\n\n          <select onChange={filterOrganizationsByCause} required>\n            <option value=\"\">Cause</option>\n            <option value=\"Animal Welfare\">Animal Welfare</option>\n            <option value=\"Arts and Culture\">Arts and Culture</option>\n            <option value=\"Children\">Children</option>\n            <option value=\"Civil Rights and Social Action\">Civil Rights and Social Action</option>\n            <option value=\"Disaster Relief\">Disaster Relief</option>\n            <option value=\"Economic Empowerment\">Economic Empowerment</option>\n            <option value=\"Education\">Education</option>\n            <option value=\"Environment\">Environment</option>\n            <option value=\"Health\">Health</option>\n            <option value=\"Human Rights\">Human Rights</option>\n            <option value=\"Politics\">Politics</option>\n            <option value=\"Poverty Alleviation\">Poverty Alleviation</option>\n            <option value=\"Science and Technology\">Science and Technology</option>\n            <option value=\"Social Services\">Social Services</option>\n          </select>\n\n          <select onChange={filterOrganizationsByInterest} required>\n            <option value=\"\">Interest</option>\n            <option value=\"Members\">Members</option>\n            <option value=\"Partnerships\">Partnerships</option>\n            <option value=\"Sponsors\">Sponsors</option>\n            <option value=\"Clients\">Clients</option>\n            <option value=\"Opportunities\">Opportunities</option>\n          </select>\n\n          <button class=\"refresh-organizations\" onClick={getOrganizations}>\n            <img src=\"/img/refresh.svg\" alt=\"\"/>\n          </button>\n        </div>\n\n        <div className=\"organizations mt-5\">\n          {organizations.map((organization, key) =>\n            <div className=\"organization\" key={key}>\n              <div className=\"organization-header\">\n                <h5>{organization.name}</h5>\n                <div className=\"organization-resources\">\n                  <a href=\"mailto:{organization.email}\" target=\"_\">\n                    {organization.email ? <img src=\"/img/email.svg\" alt=\"{organization.name} Email Address\" /> : null}\n                  </a>\n                  <a href={organization.website} target=\"_\">\n                    <img src=\"/img/link.svg\" alt=\"{organization.name} Website\" />\n                  </a>\n                </div>\n              </div>\n              <div><strong>Gender:</strong> {organization.gender}</div>\n              <div><strong>Cause:</strong> {organization.cause}</div>\n              <p className=\"organization-description\"><strong>Description:</strong> {organization.description}</p>\n              <div className=\"text-right mb-2\">\n                <button className=\"btn btn-link p-0\" onClick={readMore}>\n                  <small>Read More</small>\n                </button>\n              </div>\n              <div className=\"organization-interests\">\n                {(organization.interests || []).map((interest, key) =>\n                  <small>{interest}</small>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Organizations;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// COMPONENTS\nimport Navbar from './components/Navbar.js';\nimport Organizations from './components/Organizations.js';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Navbar/>\n\n          <Switch>\n            <div className=\"container\">\n              <div className=\"hover-container\">\n                <Route path=\"/organizations\" component={Organizations}/>\n              </div>\n            </div>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}